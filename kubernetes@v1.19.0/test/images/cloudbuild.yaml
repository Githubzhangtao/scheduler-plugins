# See https://cloud.google.com/cloud-build/docs/build-config

# this must be specified in seconds. If omitted, defaults to 600s (10 mins)
# the timeout was increased because some images might take longer to build (e.g.: sample-apiserver, pets/redis-installer)
timeout: 5400s
# this prevents errors if you don't use both _GIT_TAG and _PULL_BASE_REF,
# or any new substitutions added in the future.
options:
  substitution_option: ALLOW_LOOSE
  machineType: 'N1_HIGHCPU_8'
steps:
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    # NOTE(claudiub): We need to get the ca.pem, cert.pem, key.pem files and put create the
    # /certs/.docker-1809/, /certs/.docker-1903/, /certs/.docker-1909/ folders, which will contain the files.
    args:
    - -c
    - |
      mkdir -p .docker-windows
      gcloud secrets versions access latest --project=k8s-infra-prow-build-trusted --secret=windows-remote-docker_ca-pem > .docker-windows/ca.pem
      gcloud secrets versions access latest --project=k8s-infra-prow-build-trusted --secret=windows-remote-docker_cert-pem > .docker-windows/cert.pem
      gcloud secrets versions access latest --project=k8s-infra-prow-build-trusted --secret=windows-remote-docker_key-pem > .docker-windows/key.pem
      cp -r .docker-windows /certs/.docker-1809
      cp -r .docker-windows /certs/.docker-1903
      cp -r .docker-windows /certs/.docker-1909
    volumes:
    - name: 'certs'
      path: '/certs'
  - name: 'gcr.io/k8s-testimages/gcb-docker-gcloud:v20190906-745fed4'
    entrypoint: make
    dir: ./test/images/
    env:
    - DOCKER_CLI_EXPERIMENTAL=enabled
    - TAG=$_GIT_TAG
    - BASE_REF=$_PULL_BASE_REF
    - WHAT=$_WHAT
    - REGISTRY=gcr.io/k8s-staging-e2e-test-images
    - DOCKER_CERT_BASE_PATH=/certs
    - REMOTE_DOCKER_URL_1809=tcp://img-promoter-1809.eastus.cloudapp.azure.com:2376
    - REMOTE_DOCKER_URL_1903=tcp://img-promoter-1903.eastus.cloudapp.azure.com:2376
    - REMOTE_DOCKER_URL_1909=tcp://img-promoter-1909.eastus.cloudapp.azure.com:2376
    args:
    - all-build-and-push
    volumes:
    - name: 'certs'
      path: '/certs'
substitutions:
  # _GIT_TAG will be filled with a git-based tag for the image, of the form vYYYYMMDD-hash, and
  # can be used as a substitution
  _GIT_TAG: '12345'
  # _PULL_BASE_REF will contain the ref that was pushed to to trigger this build -
  # a branch like 'master' or 'release-0.2', or a tag like 'v0.2'.
  _PULL_BASE_REF: 'master'
  # _WHAT will contain the image name to be built and published to the staging registry.
  _WHAT: 'all-conformance'
